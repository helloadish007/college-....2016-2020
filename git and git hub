-->version control system(vcs):management of changes to word documents ,computer programs...here changes are called versions.
-->why vcs?
  1.collaboration:perform tasks together..like a grp project..
  2.storing versions:it stores and names different versions of our project ..
  3.backup:will be stored in local machines as well as in the central server..
  4.analyze:give a description of when ,what modifications were made..
 -->vcs tools:
  1.git
  2.cvs
  3.mercurial...
 -->git:is a distributed version control tool
 -->github:is a code hosting platform for version control collaboration
 -->repository:is a directory or storage space where your program lives in.there are 2 types of repositories::
    1.central
    2.local
  -->git init :initialises local repository in a specified path.
  -->git remote add origin "link of your central repository":add remote repository as the origin.//link will be in clone or download button in your central repo.
  -->git pull origin master:fetches all files from central repo.
  -->git status:tells u which files are added to index and ready to commit.
  -->git add:lets u add files to index.
  -->git commit:refers to recording snapshots of the repo at a given time.committed snapshots will never change unless done explicitly.
  -->git commit -m "message"
  -->git add -A:add all files to staging area .
  -->git commit -a :commit all files.//also if a file is added ...then after modification of that file can be also added and committed using this.
  -->git log:shows log..when u commited ..with what msg...what time..also the sha1 encryption.
  -->parallel development:
    1)branching:pointers to specific commit.  two types:
                1.local branches 
                2.remote tracking branches
        -->git branch branchname: creates a branch with name "branchname"
        -->git checkout branchname:switches to the branch "branchname"
    2)merging:combining work of different branches together.    
      -->git merge branchname: merges branchname into the destinationbranch to which we have to checkout to ,before merging.
    3))rebasing:combining work between different branches.used to make linear sequence of commits.
   ----->>git pull = git fetch(fetches as a new branch) + git merge
       -->to get to previous version of your code:
              --->>git log
--------------------------------------------------------              
commit 5479abe29c730bece310fba345c97af55323ac36
Author: helloadish007 <helloadish007@gmail.com>
Date:   Sun Nov 18 11:17:48 2018 +0530

    t1 2nd commit

commit bf4f2f890c4a5a09ab662667412dc793bcb5a160
Author: helloadish007 <helloadish007@gmail.com>
Date:   Sun Nov 18 11:17:11 2018 +0530

    t1 1st commit
---------------------------------------------------------    
    
  @suppose if i want to move to t1 file .....1st commit.............then copy 8 literals from commit
  i.e-->> git checkout bf4f2f89 t1
  it will return to previous version of t1....
  
        
                
